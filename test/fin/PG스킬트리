import Foundation

func solution(_ skill:String, _ skill_trees:[String]) -> Int {

    var cnt = 0
    // 스킬트리들 순회
    for tree in skill_trees{
        // 내 스킬트리 저장
        var mySkill = skill.map{$0}
        
        // 사용자 스킬트리 순회
        for skill in (tree.map{$0}) {
            // 내 스킬트리를 다 찍으면 완성
            if mySkill.isEmpty {
                cnt += 1
                break
            }
            print(skill, mySkill)
            // 사용자 스킬트리가 마지막이고 내 남은 스킬과 연관이 없거나, 내 선행 스킬인가?
            if skill == tree.last && (!mySkill.contains(skill) || skill == mySkill.first) {
                cnt += 1
            }
            // 내 선행 스킬인가?
            if skill == mySkill.first {
                mySkill.removeFirst()
                
            } else {
                // 스킬 트리가 내 선행스킬 다음 스킬이면 바로 실패
                if mySkill.contains(skill){
                    break
                }
                // 아니면 지켜보도록 하자.
            }
            
        }
    }
    
    
    return cnt
}


다른사람 풀이
import Foundation

func solution(_ skill:String, _ skill_trees:[String]) -> Int {

    func available(_ s: String, _ t: String) -> Bool {
        let alza = t.filter { s.contains($0) }
        return s.starts(with: alza)
    }

    return skill_trees.map { available(skill, $0) }.filter { $0 }.count
}
