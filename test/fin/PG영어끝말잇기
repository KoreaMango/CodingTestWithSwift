import Foundation

func solution(_ n:Int, _ words:[String]) -> [Int] {
    for i in 1..<words.count {
        if (words[i-1][words[i-1].index(words[i-1].endIndex, offsetBy:-1)] != words[i][words[i].index(words[i].startIndex, offsetBy: 0)]) || (words[0..<i].contains(words[i])){
            return [((i+1) % n == 0 ? n : (i+1) % n), Int(i/n)+1]
        }
    }
    return [0,0]
}

문제 핵심
1. index 함수를 잘 활용해서 끝단어와 첫단어 찾기
2. return 할 때 마지막번 째 사람이면 n 을 return 하고 아니면 그대로 리턴
3. i / n + 1 = 해당 문제 번호 / 인원 수 이므로 해당 인원의 번호 수 임
    ex) 7번쨰 문제, 3명
        1 2 3 1 2 3 1
        1이 3번쨰로 말하는 단어이다.
        i / n = 7 / 3 = 2
        2번 싸이클이 돌았다라는 뜻.
        그러므로 각자가 3번째 할 차례이므로
        2 + 1을 해줘야한다.
